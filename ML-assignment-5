import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_percentage_error
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score, calinski_harabasz_score, davies_bouldin_score
import matplotlib.pyplot as plt

path_of_file = r"C:\Users\vvmad\Downloads\5th\ML\HM7 - Java\java_cc_embed_data.csv"
data = pd.read_csv(path_of_file)

# print("Top 5 rows:")
# print(data.head())

# print("Missing values of every column:")
# print(data.isnull().sum())

# print("Data sets:")
# print(data.describe())

feature_set = data.iloc[:, :-1]  
target_set = data.iloc[:, -1]   

feature_set_train, feature_set_test, target_set_train, target_set_test = train_test_split(feature_set, target_set, test_size=0.2, random_state=42)

#A1
model = LogisticRegression()
model.fit(feature_set_train, target_set_train)

target_set_train_pred = model.predict(feature_set_train)
target_set_test_pred = model.predict(feature_set_test)



#A2
mse_train = mean_squared_error(target_set_train, target_set_train_pred)
rmse_train = mse_train ** 0.5
mape_train = mean_absolute_percentage_error(target_set_train, target_set_train_pred)
r2_train = r2_score(target_set_train, target_set_train_pred)

mse_test = mean_squared_error(target_set_test, target_set_test_pred)
rmse_test = mse_test ** 0.5
mape_test = mean_absolute_percentage_error(target_set_test, target_set_test_pred)
r2_test = r2_score(target_set_test, target_set_test_pred)

print(f"\nTraining:mse: {mse_train}, rmse: {rmse_train}, mape: {mape_train}, r2: {r2_train}")
print(f"Testing:mse: {mse_test}, rmse: {rmse_test}, mape: {mape_test}, r2: {r2_test}")



