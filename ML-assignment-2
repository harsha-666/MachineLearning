#A1
import pandas as pd
import numpy as np
file_path = r"C:\Users\vvmad\Downloads\5th\ML\Lab Session Data.xlsx"
buying_data = pd.read_excel(file_path, sheet_name = 'Purchase data')
matA = buying_data[['Candies (#)', 'Mangoes (Kg)', 'Milk Packets (#)']].dropna().values
matC = buying_data['Payment (Rs)'].dropna().values
dim = matA.shape[1]
n_vec = matA.shape[0]
rank = np.linalg.matrix_rank(matA)
A_pseudo_inv = np.linalg.pinv(matA)
matX = A_pseudo_inv @ matC

print("Dimensionality = : ",dim)
print("No of vectors = ",n_vec)
print("Rank of matA: ",rank)
print("Cost of products: :")
print(" - Candies: Rs: {:.2f}".format(matX[0]))
print(" - Mangoes: Rs: {:.2f}".format(matX[1]))
print(" - Milk Packets: Rs: {:.2f}".format(matX[2]))



#A2
#Same as A1



#A3
buying_data['status'] = buying_data['Payment (Rs)'].apply(lambda x: "RICH" if x > 200 else "POOR")
print(buying_data[['Payment (Rs)', 'status']].head())



#A4
import pandas as pd
import numpy as np
import statistics
import matplotlib.pyplot as plt

file_path = r"C:\Users\vvmad\Downloads\5th\ML\Lab Session Data.xlsx"
buying_data = pd.read_excel(file_path, sheet_name = 'IRCTC Stock Price')

data_of_price = buying_data.iloc[:, 3]
mean = statistics.mean(data_of_price)
variance = statistics.variance(data_of_price)
print("Mean = ",mean)
print("Variance = ",variance)

buying_data['Date'] = pd.to_datetime(buying_data['Date'])
wednesday = buying_data[buying_data['Date'].dt.day_name() == 'Wednesday']
mean_wed = statistics.mean(wednesday['Price'])
print(f"Wednesday mean: {mean_wed:.2f}")
print(f"Wednesday Comparison : {mean_wed - mean:.2f}")

apr_data = buying_data[buying_data['Date'].dt.month == 4]
mean_apr = statistics.mean(apr_data['Price'])
print(f"April data: {mean_apr: .2f}")
print(f"April comparison : {mean_apr - mean:.2f}")

chg = buying_data.iloc[:, 8]
loss_prob = np.mean(chg < 0)
print(f"Probability of Loss: {loss_prob:.2f}")

wed_prof = wednesday[chg < 0].shape[0]
total_wed = wednesday.shape[0]
prob_wed_prof = 1-(wed_prof/total_wed)
print(f"Probability of Making a Profit on Wednesday: {prob_wed_prof:.2f}")

prof_if_wed = prob_wed_prof
print(f"Profit if wednesday: {prof_if_wed}")

buying_data['Day of Week'] = buying_data['Date'].dt.day_name()
plt.figure(figsize=(10, 6))
plt.scatter(buying_data['Day of Week'], buying_data['Chg%'])
plt.title('Scatter Plot of chg Against Day of the Week')
plt.xlabel('Day of the Week')
plt.ylabel('Chg%')
plt.xticks(rotation=45)
plt.grid(True)
plt.show()
